(()=>{"use strict";var __webpack_modules__={311:()=>{eval("\n;// CONCATENATED MODULE: ./sources-js/pieces-classes/piece.js\nclass Piece {\r\n    constructor (color, type, chessboard, positionX, positionY) {\r\n        this.color = color;\r\n        this.type = type;\r\n        this.img = 'url(img/pieces/' + type.toLowerCase() + '_' + color +'.svg)';\r\n        this.chessboard = chessboard;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n    \r\n}\n;// CONCATENATED MODULE: ./sources-js/pieces-classes/pawn.js\n\r\n\r\nclass Pawn extends Piece {\r\n    constructor (color, type, chessboard, positionX, positionY) {\r\n        super(color,type, chessboard, positionX, positionY);\r\n    }\r\n    defineMoves () {\r\n        let potentialMoveX = this.positionX;\r\n        let potentialMoveY;\r\n        //ход вперед (не рубит)\r\n        let maxMove;\r\n        let vertical;\r\n        if (\r\n            this.positionY == 1 && this.color == 'white' || \r\n            this.positionY == 6 && this.color == 'black'\r\n            ) \r\n            {maxMove = 2;}\r\n        else {maxMove = 1;} \r\n        for (vertical = 1; vertical <=maxMove; vertical++) {\r\n            if (this.color == 'white') {potentialMoveY = this.positionY + vertical;}\r\n            if (this.color == 'black') {potentialMoveY = this.positionY - vertical;}\r\n            \r\n            if (!(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null)) {break;}\r\n            this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n        }\r\n        //срубить фигуру\r\n        vertical = 1;\r\n        if (this.color == 'white') {potentialMoveY = this.positionY + vertical;}\r\n        if (this.color == 'black') {potentialMoveY = this.positionY - vertical;}\r\n        for (let shiftX = -1; shiftX <= 1; shiftX +=2) {\r\n            potentialMoveX = this.positionX + shiftX;\r\n            if (potentialMoveY > 7 ||\r\n                potentialMoveY < 0 ||\r\n                potentialMoveX > 7 ||\r\n                potentialMoveX < 0 ||\r\n                this['chessboard']['board'][potentialMoveX][potentialMoveY] == null ||\r\n                this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color']\r\n                ) {continue;}\r\n            this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n        }\r\n    }\r\n}\n;// CONCATENATED MODULE: ./sources-js/pieces-classes/beeshop.js\n\r\n\r\nclass Beeshop extends Piece {\r\n    constructor (color, type, chessboard, positionX, positionY) {\r\n        super(color,type, chessboard, positionX, positionY);\r\n    }\r\n    defineMoves () {\r\n        let potentialMoveX;\r\n        let potentialMoveY;\r\n        for (let horisontalDirection = -1; horisontalDirection <= 1; horisontalDirection +=2) {\r\n            for (let verticalDirection = -1; verticalDirection <= 1; verticalDirection +=2) {\r\n                for (let shift = 1; shift < 7; shift++) {\r\n                    potentialMoveX = this.positionX + shift * horisontalDirection;\r\n                    potentialMoveY = this.positionY + shift * verticalDirection;\r\n                    if (potentialMoveX > 7 ||\r\n                        potentialMoveX < 0 ||\r\n                        potentialMoveY > 7 ||\r\n                        potentialMoveY < 0 ||\r\n                            (\r\n                            !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                            this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color']\r\n                            )\r\n                        ) {break;}\r\n                    this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n                    if (\r\n                        (\r\n                        !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                        !(this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color'])\r\n                        )\r\n                        ) {break;}\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n}\n;// CONCATENATED MODULE: ./sources-js/pieces-classes/knight.js\n\r\n\r\nclass Knight extends Piece {\r\n    constructor (color, type, chessboard, positionX, positionY) {\r\n        super(color,type, chessboard, positionX, positionY);\r\n    }\r\n    defineMoves () {\r\n        let potentialMoveX;\r\n        let potentialMoveY;\r\n        for (let horisontalDirection = -1; horisontalDirection <= 1; horisontalDirection += 2) {\r\n            for (let verticalDirection = -1; verticalDirection <= 1; verticalDirection +=2) {\r\n                for (let shiftX = 1; shiftX <=2; shiftX++) {\r\n                    for (let shiftY = 1; shiftY <=2; shiftY++) {\r\n                        potentialMoveX = this.positionX + shiftX * horisontalDirection;\r\n                        potentialMoveY = this.positionY + shiftY * verticalDirection;\r\n                        if (\r\n                            shiftX == shiftY ||\r\n                            potentialMoveX < 0 ||\r\n                            potentialMoveX > 7 ||\r\n                            potentialMoveY < 0 ||\r\n                            potentialMoveY > 7 ||\r\n                                (\r\n                                !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                                this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color']\r\n                                )               \r\n                            ) {continue;}\r\n                            this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n}\n;// CONCATENATED MODULE: ./sources-js/pieces-classes/rook.js\n\r\n\r\nclass Rook extends Piece {\r\n    constructor (color, type, chessboard, positionX, positionY) {\r\n        super(color,type, chessboard, positionX, positionY);\r\n    }\r\n    defineMoves () {\r\n        let potentialMoveX;\r\n        let potentialMoveY;\r\n        for (let horisontalDirection = -1; horisontalDirection <= 1; horisontalDirection +=2) {\r\n            potentialMoveY = this.positionY;\r\n            for (let shiftX = 1; shiftX < 7; shiftX++) {\r\n                potentialMoveX = this.positionX + shiftX * horisontalDirection;\r\n                if (potentialMoveX > 7 ||\r\n                    potentialMoveX < 0 ||\r\n                        (\r\n                        !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                        this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color']\r\n                        )\r\n                    ) {break;}\r\n                this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n                if (\r\n                    (\r\n                    !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                    !(this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color'])\r\n                    )\r\n                    ) {break;}\r\n            }\r\n        }\r\n        for (let verticalDirection = -1; verticalDirection <= 1; verticalDirection +=2) {\r\n            potentialMoveX = this.positionX;\r\n            for (let shiftY = 1; shiftY < 7; shiftY++) {\r\n                potentialMoveY = this.positionY + shiftY * verticalDirection;\r\n                if (potentialMoveY > 7 ||\r\n                    potentialMoveY < 0 ||\r\n                        (\r\n                        !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                        this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color']\r\n                        )\r\n                    ) {break;}\r\n                this.chessboard.possibleMoves.push([potentialMoveX, potentialMoveY]);  \r\n                if (\r\n                    (\r\n                    !(this['chessboard']['board'][potentialMoveX][potentialMoveY] == null) &&\r\n                    !(this.color == this['chessboard']['board'][potentialMoveX][potentialMoveY]['color'])\r\n                    )\r\n                    ) {break;}\r\n            }\r\n            \r\n        }\r\n    }\r\n}\n;// CONCATENATED MODULE: ./sources-js/chessboard.js\n\r\n\r\n\r\n\r\n\r\n\r\nclass Chessboard {\r\n    constructor (targetNode) {\r\n        this.initialPosition = [\r\n            //whites\r\n            {piece: \"pawn\", color: 'white', positionX: 0, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 1, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 2, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 3, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 4, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 5, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 6, positionY: 1},\r\n            {piece: \"pawn\", color: 'white', positionX: 7, positionY: 1},\r\n            {piece: \"rook\", color: 'white', positionX: 0, positionY: 0},\r\n            {piece: \"knight\", color: 'white', positionX: 1, positionY: 0},\r\n            {piece: \"beeshop\", color: 'white', positionX: 2, positionY: 0},\r\n            {piece: \"king\", color: 'white', positionX: 3, positionY: 0},\r\n            {piece: \"queen\", color: 'white', positionX: 4, positionY: 0},\r\n            {piece: \"beeshop\", color: 'white', positionX: 5, positionY: 0},\r\n            {piece: \"knight\", color: 'white', positionX: 6, positionY: 0},\r\n            {piece: \"rook\", color: 'white', positionX: 7, positionY: 0},\r\n            //blacks\r\n            {piece: \"pawn\", color: 'black', positionX: 0, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 1, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 2, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 3, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 4, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 5, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 6, positionY: 6},\r\n            {piece: \"pawn\", color: 'black', positionX: 7, positionY: 6},\r\n            {piece: \"rook\", color: 'black', positionX: 0, positionY: 7},\r\n            {piece: \"knight\", color: 'black', positionX: 1, positionY: 7},\r\n            {piece: \"beeshop\", color: 'black', positionX: 2, positionY: 7},\r\n            {piece: \"king\", color: 'black', positionX: 3, positionY: 7},\r\n            {piece: \"queen\", color: 'black', positionX: 4, positionY: 7},\r\n            {piece: \"beeshop\", color: 'black', positionX: 5, positionY: 7},\r\n            {piece: \"knight\", color: 'black', positionX: 6, positionY: 7},\r\n            {piece: \"rook\", color: 'black', positionX: 7, positionY: 7},\r\n            //--------------------------------------------------------------\r\n            {piece: \"queen\", color: 'black', positionX: 3, positionY: 2},\r\n            {piece: \"queen\", color: 'black', positionX: 3, positionY: 5},\r\n        ];\r\n        this.targetNode = targetNode;\r\n        this.turn = 'white'; \r\n        this.stage = \"select piece\"; //Возможные значения: select piece, select move\r\n        this.selectedPiece = null; \r\n        this.selectedPosition = null; //Возможные значения: null или массив позиции выбранной фигуры\r\n        this.possibleMoves = []; \r\n        this.board = []; \r\n        this.createBoard();\r\n    }\r\n\r\n    createBoard () {\r\n        \r\n        for (let row = 0; row < 8; row++ ) {\r\n            this.board.push([]);\r\n            let stripe = this['board'][row];\r\n            for (let column = 0; column < 8; column++) {\r\n                stripe.push(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    createHTMLboard () {\r\n        let chessboard = document.createElement('div');\r\n        chessboard.classList.add('chessboard');\r\n        this.targetNode.appendChild(chessboard);\r\n        let chessboard__field = document.createElement('div');\r\n        chessboard__field.classList.add('chessboard__field');\r\n        chessboard.appendChild(chessboard__field);\r\n\r\n        for (let row = 0; row < 8; row++ ) {\r\n            for (let column = 0; column < 8; column++) {\r\n                let square = document.createElement('div');\r\n                \r\n                square.classList.add('chessboard__square');\r\n                let color = (row + column) % 2;\r\n                if (color == 0) {square.classList.add('chessboard__square_light');}\r\n                    else {square.classList.add('chessboard__square_dark');}\r\n                square.classList.add('position-' + column + '-' + row);\r\n                square.innerHTML = \" \";\r\n                square.positionX = column;\r\n                square.positionY  = row;\r\n                square.addEventListener('click', function clickSquare () {window.chessboard.handleClick(this.positionX, this.positionY);});\r\n                chessboard__field.appendChild(square);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick (potentialMoveX, potentialMoveY) {\r\n        // Если выбрали свою фигуру\r\n        if (\r\n            (\r\n            !(this['board'][potentialMoveX][potentialMoveY] == null) &&\r\n            this.turn == this['board'][potentialMoveX][potentialMoveY]['color']\r\n            )\r\n            ) {\r\n            this.stage = 'select move';\r\n            if (this.selectedPosition != null) {\r\n                this.clearPossibleMoves();\r\n            }\r\n            this.selectedPosition = [potentialMoveX, potentialMoveY];\r\n            this['board'][potentialMoveX][potentialMoveY].defineMoves();\r\n            this.renderPossibleMoves();\r\n\r\n        }\r\n\r\n        //Если возможный ход\r\n        let isPossibleMove = false;\r\n        this.possibleMoves.forEach(function (index) {\r\n            if (index[0] == potentialMoveX && \r\n                index[1] == potentialMoveY) {\r\n                    isPossibleMove = true;\r\n                }\r\n        })\r\n        \r\n        if (isPossibleMove) {\r\n            this.clearPossibleMoves();\r\n            this.makeMove(potentialMoveX, potentialMoveY);\r\n            this.renderPosition();\r\n            if (this.turn == 'white') {\r\n                this.turn = 'black';\r\n            } else {\r\n                this.turn = 'white';\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    loadPosition (position) {\r\n        for (let index = 0, max = position.length; index < max; index++ ) {\r\n            let piece = position[index];\r\n            if (piece.piece && \r\n                piece.color && \r\n                piece.hasOwnProperty('positionX') && \r\n                piece.hasOwnProperty('positionY') &&\r\n                piece.positionX < 8 &&\r\n                piece.positionX >= 0 &&\r\n                piece.positionY < 8 &&\r\n                piece.positionY >= 0 \r\n                ) \r\n                {\r\n                    if (piece.piece == 'king') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Piece(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                    if (piece.piece == 'pawn') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Pawn(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                    if (piece.piece == 'knight') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Knight(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                    if (piece.piece == 'rook') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Rook(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                    if (piece.piece == 'beeshop') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Beeshop(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                    if (piece.piece == 'queen') {\r\n                        this['board'][piece.positionX][piece.positionY] = new Piece(piece.color, piece.piece, this, piece.positionX, piece.positionY);\r\n                    }\r\n                }\r\n            \r\n        }\r\n    }\r\n\r\n    renderPosition () {\r\n        for (let row = 0; row < 8; row++) {\r\n            for (let column = 0; column <8; column++) {\r\n                let square = document.querySelector(`.position-${row}-${column}`);\r\n                if (this['board'][row][column] != null &&\r\n                    this['board'][row][column].hasOwnProperty('img')\r\n                    ) {\r\n                    square.style.backgroundImage = this['board'][row][column]['img'];\r\n                    square.style.backgroundSize = 'cover';\r\n                }\r\n                else {\r\n                    square.style.backgroundImage = '';\r\n                    square.style.backgroundSize = '';\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    clearPossibleMoves () {\r\n        for (let delPosition = 0; delPosition < this.possibleMoves.length; delPosition++) {\r\n            let square = document.querySelector(`.position-${this.possibleMoves[delPosition][0]}-${this.possibleMoves[delPosition][1]}`);\r\n            square.classList.remove('chessboard__possible-moves');\r\n        }\r\n        this.possibleMoves = [];\r\n        \r\n        let oldSelectedSquare = document.querySelector(`.position-${this.selectedPosition[0]}-${this.selectedPosition[1]}`);\r\n        oldSelectedSquare.classList.remove('chessboard__square_selected'); \r\n    }\r\n\r\n    renderPossibleMoves () {\r\n        let selectedSquare = document.querySelector(`.position-${this.selectedPosition[0]}-${this.selectedPosition[1]}`);\r\n        selectedSquare.classList.add('chessboard__square_selected');\r\n        for (let move = 0; move < this.possibleMoves.length; move++) {\r\n            let square = document.querySelector(`.position-${this.possibleMoves[move][0]}-${this.possibleMoves[move][1]}`);\r\n            square.classList.add('chessboard__possible-moves');\r\n        }\r\n    }\r\n\r\n    makeMove (moveToX, moveToY) {\r\n        this['board'][moveToX][moveToY] = this['board'][this.selectedPosition[0]][this.selectedPosition[1]];\r\n        this['board'][moveToX][moveToY]['positionX'] = moveToX;\r\n        this['board'][moveToX][moveToY]['positionY'] = moveToY;\r\n        this['board'][this.selectedPosition[0]][this.selectedPosition[1]] = null;\r\n        console.log('nothing');\r\n    }\r\n\r\n}\n;// CONCATENATED MODULE: ./sources-js/script.js\n\r\n\r\n\r\nwindow.onload = function () {\r\n    window.chessboard = new Chessboard (document.querySelector('.chess'));\r\n    chessboard.createHTMLboard();\r\n    chessboard.loadPosition(chessboard.initialPosition);\r\n    chessboard.renderPosition();\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///311\n")}},__webpack_exports__={};__webpack_modules__[311]()})();